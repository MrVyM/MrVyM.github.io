"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[1140],{8772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var s=n(4302),i=n(4848),r=n(8453);const o={slug:"how-copy-paste-works-on-linux",title:"How copy-paste works on Linux ?",tags:["Linux","Xorg","Copy","Paste"],hide_title:!1,date:new Date("2025-01-31T00:00:00.000Z"),unlisted:!0,authors:["mrvym"]},l="How Copy Paste works on Linux",a={authorsImageUrls:[void 0]},c=[{value:"X10 and cut-buffers",id:"x10-and-cut-buffers",level:2},{value:"Support by X11",id:"support-by-x11",level:2},{value:"Selection",id:"selection",level:3},{value:"PRIMARY",id:"primary",level:4},{value:"SECONDARY",id:"secondary",level:4},{value:"CLIPBOARD",id:"clipboard",level:4},{value:"Support by Tmux",id:"support-by-tmux",level:2},{value:"Alias",id:"alias",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"In this article, we will explore the internal functioning of Copy-Paste in Linux.\nFirst, let me introduce some context. There is a manual, almost like an RFC."}),"\n",(0,i.jsx)(t.p,{children:"The Inter-Communication Client Conventions Manual (for short ICCCM), which imposes some rules.\nThe first version was published in July 1989 and the second in 1994.\nThis manual, written 30 years ago, is therefore the reference for the subject."}),"\n",(0,i.jsx)(t.h2,{id:"x10-and-cut-buffers",children:"X10 and cut-buffers"}),"\n",(0,i.jsxs)(t.p,{children:["For context, first release of X10 was in 1985. At this time, the ICCCM wasn't released.\nXorg made it's own custom way to works. They used a thing called ",(0,i.jsx)(t.code,{children:"cut-buffer"})," or also knows as ",(0,i.jsx)(t.code,{children:"buffer-cut"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"A cut-buffer works like a circular buffer of 8 buffers, which begins from CUTBUFFER0 to CUTBUFFER7.\nWhen a user want add a string in a cut-buffer, every string switches to another buffer.\nSo the circular buffer is like a history of all copy-paste."}),"\n",(0,i.jsx)(t.p,{children:"Nowday, there is no more programs which used a cut-buffer or at least they used the cut-buffer and the new way."}),"\n",(0,i.jsx)(t.h2,{id:"support-by-x11",children:"Support by X11"}),"\n",(0,i.jsx)(t.h3,{id:"selection",children:"Selection"}),"\n",(0,i.jsx)(t.h4,{id:"primary",children:"PRIMARY"}),"\n",(0,i.jsx)(t.h4,{id:"secondary",children:"SECONDARY"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Unused"}),"\n"]}),"\n",(0,i.jsx)(t.h4,{id:"clipboard",children:"CLIPBOARD"}),"\n",(0,i.jsx)(t.h2,{id:"support-by-tmux",children:"Support by Tmux"}),"\n",(0,i.jsx)(t.h2,{id:"alias",children:"Alias"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:'alias paste="xsel --clipboard"\n'})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:'alias copy="xsel --clipboard"\n'})}),"\n",(0,i.jsx)(t.p,{children:"Sources :"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://x.org/releases/X11R7.6/doc/xorg-docs/specs/ICCCM/icccm.html",children:"ICCCM"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"http://vimdoc.sourceforge.net/htmldoc/gui_x11.html#quoteplus",children:"VimDoc"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.freedesktop.org/wiki/Specifications/ClipboardsWiki/",children:"ClipbordWiki"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://superuser.com/questions/90257/what-is-the-difference-between-the-x-clipboards",children:"StackOverflow - Diff between X Clip"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}},4302:e=>{e.exports=JSON.parse('{"permalink":"/how-copy-paste-works-on-linux","editUrl":"https://github.com/MrVyM/MrVyM.github.io/issues/blog/2025-01-31-How-copy-paste-works.mdx","source":"@site/blog/2025-01-31-How-copy-paste-works.mdx","title":"How copy-paste works on Linux ?","description":"In this article, we will explore the internal functioning of Copy-Paste in Linux.","date":"2025-01-31T00:00:00.000Z","tags":[{"inline":true,"label":"Linux","permalink":"/tags/linux"},{"inline":true,"label":"Xorg","permalink":"/tags/xorg"},{"inline":true,"label":"Copy","permalink":"/tags/copy"},{"inline":true,"label":"Paste","permalink":"/tags/paste"}],"readingTime":0.7533333333333333,"hasTruncateMarker":true,"authors":[{"name":"Vianney Marticou","title":"Mr.VyM @ EPITA","url":"https://github.com/mrvym","page":{"permalink":"/authors/mrvym"},"socials":{"github":"https://github.com/mrvym"},"imageURL":"https://github.com/mrvym.png","key":"mrvym"}],"frontMatter":{"slug":"how-copy-paste-works-on-linux","title":"How copy-paste works on Linux ?","tags":["Linux","Xorg","Copy","Paste"],"hide_title":false,"date":"2025-01-31T00:00:00.000Z","unlisted":true,"authors":["mrvym"]},"unlisted":true}')}}]);