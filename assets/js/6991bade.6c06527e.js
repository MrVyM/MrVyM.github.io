"use strict";(self.webpackChunkmrvym_blog=self.webpackChunkmrvym_blog||[]).push([[2388],{2702:e=>{e.exports=JSON.parse('{"permalink":"/understanding-ipcc-on-stm32","editUrl":"https://github.com/MrVyM/MrVyM.github.io/issues/blog/2025-08-03-Understanding_and_mastering_inter_processor_communication_on_stm32/index.mdx","source":"@site/blog/2025-08-03-Understanding_and_mastering_inter_processor_communication_on_stm32/index.mdx","title":"Understanding and mastering inter-processor communication on STM32MP","description":"In modern embedded systems, it is common to find multiple processor cores (CPUs) working together, each potentially running a different operating system \u2014 for example, Linux on a Cortex-A core and an RTOS such as FreeRTOS on a Cortex-M.","date":"2025-08-03T00:00:00.000Z","tags":[{"inline":true,"label":"stm32","permalink":"/tags/stm-32"},{"inline":true,"label":"IPC","permalink":"/tags/ipc"},{"inline":true,"label":"FreeRTOS","permalink":"/tags/free-rtos"},{"inline":true,"label":"OpenStLinux","permalink":"/tags/open-st-linux"}],"readingTime":5.466666666666667,"hasTruncateMarker":true,"authors":[{"name":"Vianney Marticou","title":"Mr.VyM @ EPITA","url":"https://github.com/mrvym","page":{"permalink":"/authors/mrvym"},"socials":{"github":"https://github.com/mrvym","linkedin":"https://www.linkedin.com/in/vianney-marticou/"},"imageURL":"https://github.com/mrvym.png","key":"mrvym"}],"frontMatter":{"title":"Understanding and mastering inter-processor communication on STM32MP","slug":"understanding-ipcc-on-stm32","authors":["mrvym"],"tags":["stm32","IPC","FreeRTOS","OpenStLinux"],"date":"08/03/2025","hide_title":false,"unlisted":true},"unlisted":true}')},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}},8694:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var r=t(2702),i=t(4848),o=t(8453);const s={title:"Understanding and mastering inter-processor communication on STM32MP",slug:"understanding-ipcc-on-stm32",authors:["mrvym"],tags:["stm32","IPC","FreeRTOS","OpenStLinux"],date:"08/03/2025",hide_title:!1,unlisted:!0},a="Introduction",m={authorsImageUrls:[void 0]},c=[];function u(e){const n={p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"In modern embedded systems, it is common to find multiple processor cores (CPUs) working together, each potentially running a different operating system \u2014 for example, Linux on a Cortex-A core and an RTOS such as FreeRTOS on a Cortex-M."}),"\n",(0,i.jsx)(n.p,{children:"Communication between these cores is essential, but there is no single standard to achieve this. OpenAMP, with its RPMsg and RemoteProc components, provides a flexible and widely adopted solution for intercommunication between Linux and RTOS or bare-metal systems."})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);